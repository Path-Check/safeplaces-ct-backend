openapi: 3.0.0
info:
  title: Safe Places - Server Backend
  description: >-
    API spec for SAFE PLACES Backend as part of the SAFE PATHS initiative.  You
    can find out more about SAFE PATHS AT
    [https://covidsafepaths.org/](https://covidsafepaths.org/)
  version: 1.0.0
  contact:
    email: satoshi.kawase@pathcheck.org
  license:
    name: MIT
    url: 'https://opensource.org/licenses/MIT'
servers:
  - url: /v1
components:
  securitySchemes:
    contactTracer:
      type: http
      scheme: bearer
      description: contact tracer access
    admin:
      type: http
      scheme: bearer
      description: admin access
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
      
  parameters:
    caseIdParam:
      in : path
      name: caseId
      required : true
      description: 'The ID of the case'
      schema:
        $ref: '#/components/schemas/caseId'
    orgIdParam:
      in : path
      name: orgId
      required: true
      description: 'the ID of the org'
      schema:
        $ref: '#/components/schemas/orgId'
  schemas:
    orgId:
      type: number
      example: 32424552
    concernPoint: 
      type: object
      properties:
        longitude:
          type: number
          example: 14.91328448
        latitude:
          type: number
          example: 41.24060321
        time:
          type: number
          example: 1589117739000
        hash:
          type: string
          example: 87e916850d4def3c
    concernPoints:
      type: array
      items:
        $ref: '#/components/schemas/concernPoint'
    caseId:
      type: number
      example: 23432461
    caseState:
      type: string
      enum:
        - original
        - unpublished
        - staging
        - published
    case:
      type : object
      properties:
        id:
          type: integer
          example: 14
        updatedAt:
          type: string
          example: "2020-05-21T18:25:43.511Z"
        status:
          $ref: '#/components/schemas/caseState'
        expiresAt:
          type: string
          example: "2020-05-30T18:25:43.511Z"
    cases:
      type: array
      items:
        $ref: '#/components/schemas/case'
    authCode:
      type: string
      example: bluebird
    LoginDto:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
        - username
        - password
  examples:
    concernPointsOriginal:
      value: {  "caseState" : "original", 
                "concernPoints" : 
              [  {"time":1583069745916,"longitude":-0.10753902581515137,"latitude":51.55987524514395, "hash": "c4ca4238a0b923820dcc509a6f75849b"},
                {"time":1583069765568,"longitude":-0.06407687379643874,"latitude":51.53626227398831, "hash": "c81e728d9d4c2f636f067f89cc14862c"},
                {"time":1583069873127,"longitude":-0.10383699531844902,"latitude":51.5687569927817, "hash": "eccbc87e4b5ce2fe28308fd9f2a7baf3"},
                {"time":1583070083733,"longitude":-0.09565287120047716,"latitude":51.56663238135933, "hash": "a87ff679a2f3e71d9181a67b7542122c"},
                {"time":1583070140324,"longitude":-0.13367363946595986,"latitude":51.53989797636888, "hash": "e4da3b7fbbce2345d7772b0674a318d5"},
                {"time":1583070243827,"longitude":-0.05729357699158614,"latitude":51.53321925729781, "hash": "1679091c5a880faf6fb5e6087eb1b2dc"},
                {"time":1583070298326,"longitude":-0.054365847106010994,"latitude":51.550572004199395, "hash": "8f14e45fceea167a5a36dedd4bea2543"},
                {"time":1583070431693,"longitude":-0.12014169804782877,"latitude":51.54859663929235, "hash": "c9f0f895fb98ab9159f51fd0297e236d"}
              ]}
    concernPointsUnpublished:
      value : {  "caseState" : "unpublished", 
                "concernPoints" : 
              [  {"time":1583069745916,"longitude":-0.10753902581515137,"latitude":51.55987524514395, "hash": "c4ca4238a0b923820dcc509a6f75849b"},
                {"time":1583069765568,"longitude":-0.06407687379643874,"latitude":51.53626227398831, "hash": "c81e728d9d4c2f636f067f89cc14862c"},
                {"time":1583069873127,"longitude":-0.10383699531844902,"latitude":51.5687569927817, "hash": "eccbc87e4b5ce2fe28308fd9f2a7baf3"},
                {"time":1583070083733,"longitude":-0.09565287120047716,"latitude":51.56663238135933, "hash": "a87ff679a2f3e71d9181a67b7542122c"},
                {"time":1583070140324,"longitude":-0.13367363946595986,"latitude":51.53989797636888, "hash": "e4da3b7fbbce2345d7772b0674a318d5"},
                {"time":1583070243827,"longitude":-0.05729357699158614,"latitude":51.53321925729781, "hash": "1679091c5a880faf6fb5e6087eb1b2dc"},
                {"time":1583070298326,"longitude":-0.054365847106010994,"latitude":51.550572004199395, "hash": "8f14e45fceea167a5a36dedd4bea2543"},
                {"time":1583070431693,"longitude":-0.12014169804782877,"latitude":51.54859663929235, "hash": "c9f0f895fb98ab9159f51fd0297e236d"}
              ]}
    concernPointsStaging:
      value : {  "caseState" : "staging", 
                "concernPoints" : 
              [  {"time":1583069745916,"longitude":-0.10753902581515137,"latitude":51.55987524514395, "hash": "c4ca4238a0b923820dcc509a6f75849b"},
                {"time":1583069765568,"longitude":-0.06407687379643874,"latitude":51.53626227398831, "hash": "c81e728d9d4c2f636f067f89cc14862c"},
                {"time":1583069873127,"longitude":-0.10383699531844902,"latitude":51.5687569927817, "hash": "eccbc87e4b5ce2fe28308fd9f2a7baf3"},
                {"time":1583070083733,"longitude":-0.09565287120047716,"latitude":51.56663238135933, "hash": "a87ff679a2f3e71d9181a67b7542122c"},
                {"time":1583070140324,"longitude":-0.13367363946595986,"latitude":51.53989797636888, "hash": "e4da3b7fbbce2345d7772b0674a318d5"},
                {"time":1583070243827,"longitude":-0.05729357699158614,"latitude":51.53321925729781, "hash": "1679091c5a880faf6fb5e6087eb1b2dc"},
                {"time":1583070298326,"longitude":-0.054365847106010994,"latitude":51.550572004199395, "hash": "8f14e45fceea167a5a36dedd4bea2543"},
                {"time":1583070431693,"longitude":-0.12014169804782877,"latitude":51.54859663929235, "hash": "c9f0f895fb98ab9159f51fd0297e236d"}
              ]}
    concernPointsPublished:
      value : {  "caseState" : "published", 
                "concernPoints" : 
              [  {"time":1583069745916,"longitude":-0.10753902581515137,"latitude":51.55987524514395, "hash": "c4ca4238a0b923820dcc509a6f75849b"},
                {"time":1583069765568,"longitude":-0.06407687379643874,"latitude":51.53626227398831, "hash": "c81e728d9d4c2f636f067f89cc14862c"},
                {"time":1583069873127,"longitude":-0.10383699531844902,"latitude":51.5687569927817, "hash": "eccbc87e4b5ce2fe28308fd9f2a7baf3"},
                {"time":1583070083733,"longitude":-0.09565287120047716,"latitude":51.56663238135933, "hash": "a87ff679a2f3e71d9181a67b7542122c"},
                {"time":1583070140324,"longitude":-0.13367363946595986,"latitude":51.53989797636888, "hash": "e4da3b7fbbce2345d7772b0674a318d5"},
                {"time":1583070243827,"longitude":-0.05729357699158614,"latitude":51.53321925729781, "hash": "1679091c5a880faf6fb5e6087eb1b2dc"},
                {"time":1583070298326,"longitude":-0.054365847106010994,"latitude":51.550572004199395, "hash": "8f14e45fceea167a5a36dedd4bea2543"},
                {"time":1583070431693,"longitude":-0.12014169804782877,"latitude":51.54859663929235, "hash": "c9f0f895fb98ab9159f51fd0297e236d"}
              ]}
    casesList:
      value: 
        {
          "cases": [
                    {
                      "id": 12,
                      "updatedAt": "2020-05-21T18:25:43.511Z",
                      "status": "In Progress",
                      "expiresAt": "2020-05-30T18:25:43.511Z"
                    },
                    {
                      "id": 13,
                      "updatedAt": "2020-05-21T18:25:43.511Z",
                      "status": "Staged for Publishing",
                      "expiresAt": "2020-05-30T18:25:43.511Z"
                    },
                    {
                      "id": 14,
                      "updatedAt": "2020-05-21T18:25:43.511Z",
                      "status": "Published",
                      "expiresAt": "2020-05-30T18:25:43.511Z"
                    }
                  ]
        }
paths:
  '/organization/{orgId}/cases':
    parameters:
      - $ref: '#/components/parameters/orgIdParam'
    get:
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  cases:
                    $ref : '#/components/schemas/cases'
              examples:
                one:
                  $ref: '#/components/examples/casesList'
  '/organizatin/{orgId}/case':
    parameters:
      - $ref: '#/components/parameters/orgIdParam'
    post:
      responses:
        '200':
          description: Creates a new case and associates it with the organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/case'
  /upload:
    post:
      summary: >-
        Accepts SAFE PATHS data upload from user.  Auth code sent in body must
        match auth code in POST /patients
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                authCode:
                  $ref: '#/components/schemas/authCode'
                concernPoints:
                  $ref: '#/components/schemas/concernPoints'
      responses:
        '201':
          description: Created
          content: {}
        '403':
          description: Access forbidden
          content: {}
        '405':
          description: Invalid input
          content: {}
        default:
          description: Unexpected behavior
  /patients:
    get:
      summary: Gets list of patient records
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/caseId'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
      security:
        - contactTracer: []
        - admin: []
    post:
      summary: >-
        Creates a record into the database which allows the patient to upload
        concern points from the PATHS app
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                authCode:
                  $ref: '#/components/schemas/authCode'
      responses:
        '200':
          description: 'Patient file was created with the id: ''caseId'''
          content:
            appliction/json:
              schema:
                type: object
                properties:
                  caseId:
                    $ref: '#/components/schemas/caseId'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '409':
          description: Auth code may only be used once
          content: {}
        default:
          description: Unexpected behavior
      security:
        - contactTracer: []
        - admin: []
  '/patients/{caseId}':
    get:
      summary: Gets patient case record
      parameters:
        - $ref: '#/components/parameters/caseIdParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  caseState:
                    $ref: '#/components/schemas/caseState'
                  concernPoints:
                    $ref: '#/components/schemas/concernPoints'
              examples:
                original: 
                  $ref: '#/components/examples/concernPointsOriginal'
                unpublished:
                  $ref : '#/components/examples/concernPointsUnpublished'
                staging:
                  $ref : '#/components/examples/concernPointsStaging'
                published:
                  $ref : '#/components/examples/concernPointsPublished'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
      security:
        - contactTracer: []
        - admin: []
    post:
      summary: Update patient case record
      parameters:
        - $ref: '#/components/parameters/caseIdParam'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                caseState:
                  $ref: '#/components/schemas/caseState'
                concernPoints:
                  $ref: '#/components/schemas/concernPoints'
      responses:
        '200':
          description: Patient case updated
          content: {}
        '400':
          description: Invalid request
          content: {}
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          description: Lacks sufficient authority for operation
          content: {}
        default:
          description: Unexpected behavior
      security:
        - contactTracer: []
        - admin: []
    delete:
      summary: delete patient case record
      parameters:
        - $ref: '#/components/parameters/caseIdParam'
      responses:
        '200':
          description: Patient case deleted
          content: {}
        '400':
          description: Invalid request
          content: {}
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          description: Lacks sufficient authority for operation
          content: {}
        default:
          description: Unexpected behavior
      security:
        - contactTracer: []
        - admin: []
  '/safe_path/{orgId}':
    get:
      summary: >-
        Retrieve current set of points of concern, no auth needed, called by
        mobile phone app - part of mandatory API
      parameters:
        - $ref: '#/components/parameters/orgIdParam'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /login:
    post:
      operationId: AuthController_login
      summary: Initiate authorization - part of mandatory API
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginDto'
      responses:
        '200':
          description: ''