{
  "info": {
    "_postman_id": "44425862-6042-428a-8737-a73491b6eb81",
    "name": "Safe Places - Nest Js Backend copy",
    "description": "The Safe Places API Specification",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "login",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "452e3fd6-760e-4717-ad91-b41fd5d938b2",
            "exec": [
              "var response = JSON.parse(responseBody);\r",
              "\r",
              "if (tests[\"Successful POST request\"] = responseCode.code === 200) {\r",
              "    tests[\"Response time is less than 3s\"] = responseTime < 3000;\r",
              "    var token = response.token;\r",
              "    if (tests[\"Token is not empty\"] = token.length > 0) {\r",
              "        pm.environment.set(\"token\", token);\r",
              "    }\r",
              "}\r",
              "\r",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "noauth"
        },
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"username\": \"safeplaces@extremesolution.com\",\n    \"password\": \"Wx$sRj3E\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/login",
          "host": ["{{baseUrl}}"],
          "path": ["login"],
          "query": [
            {
              "key": "",
              "value": "",
              "disabled": true
            },
            {
              "key": "",
              "value": "",
              "disabled": true
            }
          ]
        }
      },
      "response": [
        {
          "name": "Untitled Response",
          "originalRequest": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"username\": \"<string>\",\n    \"password\": \"<string>\",\n    \"code\": \"<string>\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/login2",
              "host": ["{{baseUrl}}"],
              "path": ["login2"]
            }
          },
          "status": "Created",
          "code": 201,
          "_postman_previewlanguage": "text",
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "cookie": [],
          "body": ""
        }
      ]
    },
    {
      "name": "organization/case",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "8422cfa1-17f0-4295-a430-ab7a6dd2f238",
            "exec": [
              "var jsonData = pm.response.json();\r",
              "\r",
              "pm.test(\"Status code is 200\", function () {\r",
              "    pm.response.to.have.status(200);\r",
              "});\r",
              "\r",
              "//var count = Object.keys(jsonData.data[0].trail).length;\r",
              "\r",
              "\r",
              "pm.test(\"Check organization - identifier \", function () {\r",
              "    pm.expect(jsonData.state).to.eql(\"unpublished\");\r",
              "});\r",
              "\r",
              "pm.test(\"Check organization - external_id \", function () {\r",
              "    pm.expect(jsonData.external_id).not.to.eql(\"\");\r",
              "});\r",
              "\r",
              "\r",
              "pm.test(\"Check organization - caseId \", function () {\r",
              "    pm.expect(jsonData.caseId).not.to.eql(\"\");\r",
              "});\r",
              "\r",
              "pm.test(\"Check organization - updatedAt \", function () {\r",
              "    pm.expect(jsonData.updatedAt).not.to.eql(\"\");\r",
              "});\r",
              "\r",
              "pm.test(\"Check organization - expiresAt \", function () {\r",
              "    pm.expect(jsonData.expiresAt).not.to.eql(\"\");\r",
              "});\r",
              "\r",
              "pm.test(\"Check organization - externalId \", function () {\r",
              "    pm.expect(jsonData.externalId).not.to.eql(\"\");\r",
              "});\r",
              "\r",
              "pm.test(\"Check organization - contactTracerId \", function () {\r",
              "    pm.expect(jsonData.contactTracerId).not.to.eql(\"\");\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "noauth"
        },
        "method": "POST",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{token}}",
            "type": "text"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/organization/case",
          "host": ["{{baseUrl}}"],
          "path": ["organization", "case"]
        }
      },
      "response": [
        {
          "name": "Untitled Response",
          "originalRequest": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/",
              "host": ["{{baseUrl}}"],
              "path": [""]
            }
          },
          "status": "Created",
          "code": 201,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "cookie": [],
          "body": "\"<boolean>\""
        },
        {
          "name": "An intial \"tester\" (password: \"tester54321\") user is created.",
          "originalRequest": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/",
              "host": ["{{baseUrl}}"],
              "path": [""]
            }
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "text",
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "cookie": [],
          "body": ""
        }
      ]
    },
    {
      "name": "access-code",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "f870b8cd-46e3-4319-b87f-a179028e04bb",
            "exec": [
              "var jsonData = pm.response.json(); \r",
              "\r",
              "pm.test(\"Status code is 201\", function () {\r",
              "    pm.response.to.have.status(201);\r",
              "});\r",
              "\r",
              "pm.test(\"Check accessCode \", function () {\r",
              "    pm.expect(jsonData.accessCode).not.to.eql(\"\");\r",
              "});\r",
              "\r",
              "pm.environment.set(\"code\", jsonData.accessCode);"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{token}}",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"username\": \"safeplaes@extremesolution.com\",\n    \"password\": \"Wx$sRj3E\"\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/access-code",
          "host": ["{{baseUrl}}"],
          "path": ["access-code"]
        }
      },
      "response": [
        {
          "name": "Untitled Response",
          "originalRequest": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"username\": \"<string>\",\n    \"password\": \"<string>\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/validate",
              "host": ["{{baseUrl}}"],
              "path": ["validate"]
            }
          },
          "status": "Created",
          "code": 201,
          "_postman_previewlanguage": "text",
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "cookie": [],
          "body": ""
        }
      ]
    }
  ],
  "variable": [
    {
      "id": "baseUrl",
      "key": "baseUrl",
      "value": "/",
      "type": "string"
    }
  ],
  "protocolProfileBehavior": {}
}
