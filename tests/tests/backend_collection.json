{
	"info": {
		"_postman_id": "57fd7e4f-ae52-4fcd-9fda-03a811e79b71",
		"name": "Safe Places - Newman Test",
		"description": "The Safe Places API Specification",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bbea62d7-2a17-4ade-9b9c-063d9345f9bb",
						"exec": [
							"if (tests[\"Successful POST request\"] = responseCode.code === 204) {\r",
							"    tests[\"Response time is less than 3s\"] = responseTime < 3000;\r",
							"    console.log(pm.response.headers);\r",
							"    var cookie = pm.response.headers.filter(header => header.key === 'Set-Cookie')[0].value;\r",
							"    tests[\"Cookie is not empty\"] = !!cookie;\r",
							"    var token = /access_token=([a-zA-Z0-9\\-_.]+);/g.exec(cookie)[1];\r",
							"    tests[\"Token is not empty\"] = token.length > 0;\r",
							"}\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"safeplaces@extremesolution.com\",\n    \"password\": \"Wx$sRj3E\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": [
				{
					"name": "Untitled Response",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"<string>\",\n    \"password\": \"<string>\",\n    \"code\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/login2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login2"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "organization/case",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d4981378-e6bd-4302-9b9f-147be00fe3aa",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//var count = Object.keys(jsonData.data[0].trail).length;\r",
							"\r",
							"\r",
							"pm.test(\"Check organization - identifier \", function () {\r",
							"    pm.expect(jsonData.state).to.eql(\"unpublished\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check organization - external_id \", function () {\r",
							"    pm.expect(jsonData.external_id).not.to.eql(\"\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Check organization - caseId \", function () {\r",
							"    pm.expect(jsonData.caseId).not.to.eql(\"\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check organization - updatedAt \", function () {\r",
							"    pm.expect(jsonData.updatedAt).not.to.eql(\"\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check organization - expiresAt \", function () {\r",
							"    pm.expect(jsonData.expiresAt).not.to.eql(\"\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check organization - externalId \", function () {\r",
							"    pm.expect(jsonData.externalId).not.to.eql(\"\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check organization - contactTracerId \", function () {\r",
							"    pm.expect(jsonData.contactTracerId).not.to.eql(\"\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/organization/case",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"organization",
						"case"
					]
				}
			},
			"response": [
				{
					"name": "Untitled Response",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								""
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "\"<boolean>\""
				},
				{
					"name": "An intial \"tester\" (password: \"tester54321\") user is created.",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								""
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "access-code",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6c830759-f58b-4613-ad68-d5c9569f9c24",
						"exec": [
							"var jsonData = pm.response.json(); \r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Check accessCode \", function () {\r",
							"    pm.expect(jsonData.accessCode).not.to.eql(\"\");\r",
							"});\r",
							"\r",
							"pm.environment.set(\"code\", jsonData.accessCode);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"safeplaes@extremesolution.com\",\n    \"password\": \"Wx$sRj3E\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/access-code",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"access-code"
					]
				}
			},
			"response": [
				{
					"name": "Untitled Response",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"<string>\",\n    \"password\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/validate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"validate"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "9c6cf831-2b69-4691-8c36-4fbda123c14e",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "aa2950de-3a5d-4759-baef-15ebe71e6068",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "f91d81f7-64e0-47ba-ac47-28ee26437d38",
			"key": "baseUrl",
			"value": "/"
		}
	],
	"protocolProfileBehavior": {}
}